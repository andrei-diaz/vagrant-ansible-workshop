---
# Playbook Principal - Sistema de Ex√°menes M√©dicos
# Taller Vagrant + Ansible - Orquestaci√≥n Completa

- name: "DEPLOY: Sistema de Ex√°menes M√©dicos - Inicio"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Mostrar informaci√≥n del despliegue
      debug:
        msg: |
          ==========================================
          üè• SISTEMA DE EX√ÅMENES M√âDICOS
          ==========================================
          üìÖ Timestamp: {{ deploy_timestamp | default(ansible_date_time.epoch) }}
          üåê Dominio: {{ app_domain }}
          üîß Proyecto: {{ project_name }}
          ==========================================
          Iniciando despliegue automatizado...

# ===========================================
# FASE 1: Base System Setup
# ===========================================
- name: "FASE 1: Configuraci√≥n base del sistema"
  hosts: examenes_infrastructure
  become: yes
  gather_facts: yes
  tasks:
    - name: Actualizar cache de paquetes
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Instalar paquetes b√°sicos
      apt:
        name:
          - curl
          - wget
          - git
          - unzip
          - htop
          - vim
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present

    - name: Configurar timezone
      timezone:
        name: America/Mexico_City

# ===========================================
# FASE 2: Database Server
# ===========================================
- import_playbook: database.yml

# ===========================================
# FASE 3: Web Application Server
# ===========================================
- import_playbook: web_server.yml

# ===========================================
# FASE 4: Load Balancer
# ===========================================
- import_playbook: load_balancer.yml

# ===========================================
# FASE 5: Monitoring Stack
# ===========================================
- import_playbook: monitoring.yml

# ===========================================
# FASE 6: Application Deployment
# ===========================================
- name: "FASE 6: Deploy de la aplicaci√≥n CakePHP"
  hosts: webservers
  become: yes
  vars:
    app_path: "/var/www/{{ project_name }}"
  tasks:
    - name: Esperar a que PostgreSQL est√© listo
      wait_for:
        host: "{{ hostvars['examenes-db']['ansible_default_ipv4']['address'] }}"
        port: 5432
        delay: 10
        timeout: 300

    - name: Configurar permisos de directorios CakePHP
      file:
        path: "{{ item }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0775'
        recurse: yes
      loop:
        - "{{ app_path }}/tmp"
        - "{{ app_path }}/logs"
        - "{{ app_path }}/webroot"

    - name: Instalar dependencias de Composer
      command: composer install --no-dev --optimize-autoloader
      args:
        chdir: "{{ app_path }}"
      become_user: www-data

    - name: Ejecutar migraciones de CakePHP
      command: php bin/cake.php migrations migrate
      args:
        chdir: "{{ app_path }}"
      become_user: www-data

    - name: Ejecutar seeders
      command: php bin/cake.php migrations seed
      args:
        chdir: "{{ app_path }}"
      become_user: www-data
      ignore_errors: yes

# ===========================================
# FASE 7: Verificaci√≥n del Despliegue
# ===========================================
- name: "FASE 7: Verificaci√≥n del sistema"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Verificar conectividad del Load Balancer
      uri:
        url: "http://192.168.56.10"
        method: GET
        status_code: [200, 302]
      register: lb_check
      ignore_errors: yes

    - name: Verificar conectividad de la aplicaci√≥n web
      uri:
        url: "http://192.168.56.20"
        method: GET
        status_code: [200, 302]
      register: web_check
      ignore_errors: yes

    - name: Verificar conectividad de PostgreSQL
      wait_for:
        host: 192.168.56.30
        port: 5432
        timeout: 10
      register: db_check
      ignore_errors: yes

    - name: Verificar conectividad de Grafana
      uri:
        url: "http://192.168.56.40:3000"
        method: GET
        status_code: [200, 302]
      register: grafana_check
      ignore_errors: yes

    - name: Mostrar resumen del despliegue
      debug:
        msg: |
          ==========================================
           DESPLIEGUE COMPLETADO
          ==========================================
          üîó URLs de Acceso:
          ‚Ä¢ Load Balancer: http://localhost:8080
          ‚Ä¢ App Directa: http://192.168.56.20
          ‚Ä¢ Grafana: http://localhost:3000
          ‚Ä¢ PostgreSQL: localhost:5433
          
           Estado de Servicios:
          ‚Ä¢ Load Balancer: {{ 'OK' if lb_check is not failed else 'ERROR' }}
          ‚Ä¢ Web Server: {{ 'OK' if web_check is not failed else 'ERROR' }}
          ‚Ä¢ Database: {{ 'OK' if db_check is not failed else 'ERROR' }}
          ‚Ä¢ Monitoring: {{ 'OK' if grafana_check is not failed else 'ERROR' }}
          ==========================================